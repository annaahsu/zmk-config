/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&encoder_1 {
    status = "okay";
};

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define CONTROL 3

/ {
    behaviors {
        td_lx: tap_dance_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYERS";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&mo 1>, <&mo 2>, <&mo 3>;
        };
    };
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
        triggers-per-rotation = <20>;
    };

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
                &kp TAB    &kp Q     &kp W     &kp F     &kp P     &kp B      &kp J     &kp L     &kp U       &kp Y        &kp ENTER     &kp BSPC
                &kp LCTRL  &kp A     &kp R     &kp S     &kp T     &kp G      &kp M     &kp N     &kp E       &kp I                      &kp O
                &kp LSHFT  &kp Z     &kp X     &kp C     &kp D     &kp V      &kp K     &kp H     &kp COMMA                &kp DOT       &kp RSHFT
                &mo 2      &kp LGUI  &kp LALT  &kp SPACE           &td_lx               &kp SPACE             &kp RALT     &td_lx        &kp RCTRL    &kp C_MUTE
			>;
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
		};

		lower_layer {
			bindings = <
                &trans     &kp ESC   &kp PG_UP &kp GRAVE &kp ENTER &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_N0   &kp KP_ENTER &kp LC(C)     &kp DEL
                &trans     &kp HOME  &kp PG_DN &kp END   &kp LC(F) &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_PLUS &kp KP_MULTIPLY            &kp LC(V)
                &trans     &kp FSLH  &kp MINUS &kp EQUAL &kp TAB   &kp KP_N1  &kp KP_N2 &kp KP_N3 &kp KP_MINUS             &kp KP_DIVIDE &trans
                &trans     &trans    &trans    &kp BSPC            &trans               &kp KP_DOT            &trans       &trans        &trans       &kp C_MUTE
			>;
            sensor-bindings = <&inc_dec_kp DOWN UP>;

		};
        
        raise_layer {
			bindings = <
                &trans     &kp F9    &kp F10   &kp F11   &kp F12   &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR    &kp LBKT     &kp RBKT      &trans
                &trans     &kp F5    &kp F6    &kp F7    &kp F8    &kp DLLR   &kp PRCNT &kp CARET &kp SEMI    &kp APOS                   &kp BSLH
                &trans     &kp F1    &kp F2    &kp F3    &kp F4    &kp EXCL   &kp AT    &kp HASH  &trans                   &out OUT_TOG  &trans
                &trans     &trans    &trans    &kp DEL             &trans               &trans                &trans       &trans        &trans       &kp C_MUTE
			>;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
		};
        
        control_layer {
			bindings = <
                &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans    &trans        &trans
                &trans     &kp A      &kp S      &kp D     &kp F     &kp G      &kp H     &kp J     &kp K       &kp PSCRN                &kp CAPS
                &trans     &bt BT_NXT &bt BT_PRV &kp C     &kp V     &bt BT_CLR &kp N     &kp M     &kp KP_NLCK            &kp SLCK      &kp INS
                &trans     &trans    &trans    &trans              &trans               &trans                &trans       &trans        &trans       &kp C_MUTE
			>;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
	};
};
